name: Kernel Build and Docker Image CI

on:
  push:
    branches: [ "rpi-6.6.y" ]
  pull_request:
    branches: [ "rpi-6.6.y" ]

jobs:
  kernel-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu make bc bison flex libssl-dev libelf-dev

    - name: Build kernel
      run: |
        mkdir -p build_output/boot/overlays
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        make bcm2712_defconfig
        make -j$(nproc) Image.gz dtbs modules
        cp arch/arm64/boot/Image.gz build_output/boot/kernel8.img
        cp arch/arm64/boot/dts/broadcom/*.dtb build_output/boot/ || true
        cp arch/arm64/boot/dts/overlays/*.dtb* build_output/boot/overlays/ || true
        make modules_install INSTALL_MOD_PATH=$(pwd)/build_output

    - name: Package kernel build
      run: |
        tar -czvf kernel_build.tar.gz -C build_output .

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-build
        path: kernel_build.tar.gz
        retention-days: 90

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the Docker image
      run: |
        IMAGE_TAG=ghcr.io/${{ github.repository_owner }}/kernel-image:$(date +%s)
        docker build . --file Dockerfile --tag $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Push the Docker image
      run: docker push ${{ env.IMAGE_TAG }}

    - name: Display Docker Image URL
      run: |
        echo "Docker Image URL: ${{ env.IMAGE_TAG }}"
        echo "::set-output name=image-url::${{ env.IMAGE_TAG }}"

    - name: Upload Docker Image URL as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Docker Image URL
        path: <(echo ${{ env.IMAGE_TAG }})
